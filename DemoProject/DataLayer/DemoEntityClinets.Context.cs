//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DemoProject.DataLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class DemoEntities : DbContext
    {
        public DemoEntities()
            : base("name=DemoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Department> Departments { get; set; }
        public DbSet<Employee> Employees { get; set; }
    
        public virtual ObjectResult<usp_Department_GetAll_Result> usp_Department_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Department_GetAll_Result>("usp_Department_GetAll");
        }
    
        public virtual int usp_Employee_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Employee_Delete", idParameter);
        }
    
        public virtual ObjectResult<usp_Employee_GetAll_Result> usp_Employee_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Employee_GetAll_Result>("usp_Employee_GetAll");
        }
    
        public virtual ObjectResult<usp_Employee_GetById_Result> usp_Employee_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Employee_GetById_Result>("usp_Employee_GetById", idParameter);
        }
    
        public virtual int usp_Employee_Insert(string employeeName, Nullable<int> departmentId, Nullable<double> salary, Nullable<int> rowStatus)
        {
            var employeeNameParameter = employeeName != null ?
                new ObjectParameter("EmployeeName", employeeName) :
                new ObjectParameter("EmployeeName", typeof(string));
    
            var departmentIdParameter = departmentId.HasValue ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(int));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("Salary", salary) :
                new ObjectParameter("Salary", typeof(double));
    
            var rowStatusParameter = rowStatus.HasValue ?
                new ObjectParameter("RowStatus", rowStatus) :
                new ObjectParameter("RowStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Employee_Insert", employeeNameParameter, departmentIdParameter, salaryParameter, rowStatusParameter);
        }
    
        public virtual int usp_Employee_Update(Nullable<int> id, string employeeName, Nullable<int> departmentId, Nullable<double> salary, Nullable<int> rowStatus)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var employeeNameParameter = employeeName != null ?
                new ObjectParameter("EmployeeName", employeeName) :
                new ObjectParameter("EmployeeName", typeof(string));
    
            var departmentIdParameter = departmentId.HasValue ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(int));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("Salary", salary) :
                new ObjectParameter("Salary", typeof(double));
    
            var rowStatusParameter = rowStatus.HasValue ?
                new ObjectParameter("RowStatus", rowStatus) :
                new ObjectParameter("RowStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Employee_Update", idParameter, employeeNameParameter, departmentIdParameter, salaryParameter, rowStatusParameter);
        }
    }
}
